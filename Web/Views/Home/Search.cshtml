@model SearchView
@{
	ViewBag.Title = "Search";
	ViewBag.NavHome = true;
	ViewBag.SearchQuery = Model.OriginalQuery;
	ViewBag.QueryParts = Model.QueryParts;
}

@if (string.IsNullOrEmpty(Model.OriginalQuery))
{
	<div class="message"><div><span>To search, type something in the search box above.</span></div></div>
}
else
{ 
	<div class="row search header-content">
		<div class="span12">
			<div class="alert-message clearfix">
				Search results for @Html.Raw(string.Join(" and ", Model.QueryParts.Select(x => "<span class='hilite'>" + x + "</span>"))) (@String.Format("{0:N2} seconds",(ViewBag.Duration as Double?)))
				<a href="#" class="report-issue right" data-details="Search: @Model.OriginalQuery" title="Report Issue">@(Sprite.Image("~/App_Sprites/icon_report.png"))</a>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="span4 module primary-content" id="uxVerses">
			<h1>Matching Verses (@(Model.MatchingVerses != null && Model.MatchingVerses.Count() > 0 ? Model.MatchingVerses.Count() : 0))</h1>
			<div class="scrollable">
				@if (Model.MatchingVerses != null && Model.MatchingVerses.Count() > 0)
				{
					<ul class="unstyled lines">
						@foreach (var verse in Model.MatchingVerses)
						{
							Html.RenderPartial("~/Views/Scripture/_Verse.cshtml", verse);
						}
					</ul>
				}
				else
				{
					<div class='message'><div><span>No verses.</span></div></div>
				}
			</div>
		</div>
		<div class="span4 module primary-content" id="uxGlossary">
			<h1>Matching Terms (@(Model.MatchingTerms != null && Model.MatchingTerms.Count() > 0 ? Model.MatchingTerms.Count() : 0))</h1>
			<div class="scrollable">
				@if (Model.MatchingTerms != null && Model.MatchingTerms.Count() > 0)
				{
					<ul class="unstyled lines">
						@foreach (var term in Model.MatchingTerms)
						{
							Html.RenderPartial("~/Views/Glossary/_Term.cshtml", term);
						}
					</ul>
				}
				else
				{
					<div class='message'><div><span>No terms.</span></div></div>
				}
			</div>
		</div>
		<div class="span4 module primary-content" id="uxFiles">
			<h1>Matching Files (@(Model.MatchingFiles != null && Model.MatchingFiles.Count() > 0 ? Model.MatchingFiles.Count() : 0))</h1>
			<div class="scrollable">
				@if (Model.MatchingFiles != null && Model.MatchingFiles.Count() > 0)
				{
					<ul class="unstyled lines">
						@foreach (var file in Model.MatchingFiles)
						{
							Html.RenderPartial("~/Views/Files/_File.cshtml", file);
						}
					</ul>
				}
				else
				{
					<div class='message'><div><span>No files.</span></div></div>
				}
			</div>
		</div>
	</div>
	@Html.Partial("~/Views/Files/_Dialog.cshtml")
}